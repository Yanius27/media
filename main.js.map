{"version":3,"file":"main.js","mappings":"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","sources":["webpack://media/./src/js/components/MediaControls.js","webpack://media/./src/js/components/Card.js","webpack://media/./src/js/components/Popup.js","webpack://media/./src/index.js","webpack://media/./src/js/App.js"],"sourcesContent":["export default class MediaControls {\r\n  constructor(media, type) {\r\n    this._media = media;\r\n    this._type = type;\r\n    this._element;\r\n    this.#createElement();\r\n  }\r\n\r\n  #createElement() {\r\n    const controls = document.createElement('div');\r\n    controls.classList.add('custom-controls');\r\n    controls.classList.add('custom-controls' + `_${this._type}`);\r\n\r\n    const play = document.createElement('div');\r\n    play.classList.add('play-button'); \r\n\r\n    const seekBar = document.createElement('div');\r\n    seekBar.classList.add('seek-bar');\r\n\r\n    const input = document.createElement('input');\r\n    input.classList.add('seek-bar-range');\r\n    input.setAttribute('type', 'range');\r\n    input.setAttribute('min', 0);\r\n    input.setAttribute('value', this._media.currentTime);\r\n    input.setAttribute('step', 1);\r\n\r\n    seekBar.append(input);\r\n\r\n    controls.append(play, seekBar);\r\n\r\n    this._element = controls;\r\n  }\r\n\r\n  get element() {\r\n    return this._element;\r\n  }\r\n}","import MediaControls from './MediaControls';\r\n\r\nexport default class Card {\r\n  constructor(content, type, coords) {\r\n    this._content = content;\r\n    this._type = type;\r\n    this._coords = coords;\r\n    this._element;\r\n    this._currentDate;\r\n\r\n    this.#setDate();\r\n    this.#createCard();\r\n  }\r\n\r\n  #setDate() {\r\n    const date = new Date();\r\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n    const month = date.getMonth() < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n    const hour = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\r\n    const minute = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\r\n    this._currentDate = `${day}.${month}.${year} ${hour}:${minute}`; \r\n  }\r\n\r\n\r\n  #createCard() {\r\n    const card = document.createElement('div');\r\n    card.classList.add('card');\r\n\r\n    const flex = document.createElement('div');\r\n    flex.classList.add('flex');\r\n\r\n    const content = document.createElement('div');\r\n    content.classList.add('content');\r\n\r\n    if (this._type === 'text') {\r\n      content.textContent = this._content;\r\n    } else if (this._type === 'video') {\r\n      const video = document.createElement('video');\r\n      video.classList.add('media');\r\n      video.classList.add('videoFile');\r\n      const customControls = new MediaControls(video, 'video').element;\r\n      video.setAttribute('poster', 'https://img.freepik.com/free-photo/white-background_23-2147730801.jpg');\r\n      video.src = URL.createObjectURL(this._content);\r\n      content.append(video, customControls);\r\n    } else {\r\n      const audio = document.createElement('audio');\r\n      audio.classList.add('media');\r\n      audio.classList.add('audioFile');\r\n      const customControls = new MediaControls(audio, 'audio').element;\r\n      audio.src = URL.createObjectURL(this._content);\r\n      content.append(audio, customControls);\r\n    }\r\n\r\n    const date = document.createElement('span');\r\n    date.classList.add('date');\r\n    date.textContent = this._currentDate;\r\n\r\n    flex.append(content, date);\r\n\r\n    const coords = document.createElement('span');\r\n    coords.classList.add('coords');\r\n    const [latitude, longitude ] = this._coords;\r\n    coords.textContent = `[${ latitude }, ${ longitude }] ${ String.fromCodePoint(128065) }`;\r\n\r\n    card.append(flex, coords);\r\n\r\n    this._element = card;\r\n  }\r\n\r\n  get element() {\r\n    return this._element;\r\n  }\r\n}","export default class Popup {\r\n  constructor() {\r\n    this._element;\r\n    this.#createElement();\r\n  }\r\n\r\n  #createElement() {\r\n    const popup = document.createElement('div');\r\n    popup.classList.add('popup');\r\n\r\n    const popupTitle = document.createElement('h5');\r\n    popupTitle.classList.add('popup_title');\r\n    popupTitle.textContent = 'Что-то пошло не так'; \r\n\r\n    const popupMessage = document.createElement('span');\r\n    popupMessage.classList.add('popup_message');\r\n    popupMessage.textContent = 'К сожалению нам не удалось определить ваше местоположение, пожалуйста, дайте разрешение на использование геолокации, либо введите координаты вручную.';\r\n\r\n    const form = document.createElement('form');\r\n    form.setAttribute('novalidate', '');\r\n    form.classList.add('popup_form');\r\n\r\n    const label = document.createElement('label');\r\n    label.classList.add('popup_label');\r\n\r\n    const inputSpan = document.createElement('span');\r\n    inputSpan.classList.add('popup_inputSpan')\r\n    inputSpan.textContent = 'Широта и долгота через запятую';\r\n\r\n    const input = document.createElement('input');\r\n    input.classList.add('popup_input');\r\n    input.setAttribute('required', '');\r\n    input.setAttribute('pattern', '^(-|−)?\\\\d+(\\\\.\\\\d{1,5})?,\\\\s?(-|−)?\\\\d+(\\\\.\\\\d{1,5})?$|^\\\\[(-|−)?\\\\d+(\\\\.\\\\d{1,5})?,\\\\s?(-|−)?\\\\d+(\\\\.\\\\d{1,5})?\\\\]$');\r\n\r\n    label.append(inputSpan, input);\r\n\r\n    const buttons = document.createElement('div');\r\n    buttons.classList.add('popup_buttons');\r\n\r\n    const okBtn = document.createElement('input');\r\n    okBtn.type = 'submit';\r\n    okBtn.classList.add('popup_okBtn');\r\n    okBtn.classList.add('popup_btn');\r\n    okBtn.textContent = 'Ok';\r\n\r\n    const cancelBtn = document.createElement('button');\r\n    cancelBtn.classList.add('popup_cancelBtn');\r\n    cancelBtn.classList.add('popup_btn');\r\n    cancelBtn.textContent = 'Отмена';\r\n\r\n    buttons.append(okBtn, cancelBtn);\r\n\r\n    form.append(label, buttons);\r\n\r\n    popup.append(popupTitle, popupMessage, form);\r\n\r\n    this._element = popup;\r\n  }\r\n\r\n  get element() {\r\n    return this._element;\r\n  }\r\n}","import styles from './css/styles.css'\r\nimport App from './js/App';\r\n\r\nconst app = new App();","import Card from './components/Card';\r\nimport Popup from './components/Popup';\r\n\r\n// Вариант реализации ошибки с попапом\r\n// import ErrorMessage from './components/ErrorMessage';\r\n\r\nexport default class App {\r\n  constructor() {\r\n    this._coords;\r\n    this.initCoords();\r\n    this.messages = document.querySelector('.messages');\r\n    this.input = document.querySelector('.textInput');\r\n    this.videoPlayer = document.querySelector('.videoPlayer');\r\n\r\n    this.actualContentType;\r\n\r\n    this.stream;\r\n    this.recorder;\r\n    this.blob;\r\n\r\n    this.messageListener();\r\n\r\n    this.popup = new Popup().element;\r\n    this.popupListener();\r\n\r\n    this.recordListener();\r\n  }\r\n\r\n// Load coords after restart\r\n  initCoords() {\r\n    if (!this._coords && localStorage.getItem('coords')) {\r\n      this._coords = JSON.parse(localStorage.getItem('coords'));\r\n    }\r\n  }\r\n\r\n// Creating storage for coords\r\n  saveCoords() {\r\n    localStorage.setItem('coords', JSON.stringify(this._coords));\r\n  }\r\n\r\n// Method for getting coords from user  \r\n  getCoords() {\r\n    return new Promise((resolve, reject) => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((data) => {\r\n          const { latitude, longitude } = data.coords;\r\n          this._coords = [latitude.toFixed(5), longitude.toFixed(5)];\r\n          this.saveCoords();\r\n          resolve(this._coords);\r\n        }, (err) => {\r\n          console.log(err);\r\n          reject(err);\r\n        }, { enableHighAccuracy: true });\r\n      } else {\r\n        reject(new Error('Geolocation is not supported'));\r\n      }\r\n    });\r\n  }\r\n\r\n// Method for creating new card\r\n  async createCard(content, type, coords) {\r\n      try {\r\n        if (!coords) {\r\n          this._coords = await this.getCoords();\r\n        }  \r\n        let card = new Card(content, type, this._coords).element; \r\n        ///////// Костыльный способ узнать длительность записи до начала воспроизведения  \r\n        if (type !== 'text') {\r\n          let duration = document.querySelector('.timing').textContent.split(':');\r\n          duration = duration[0].replace('0', '') * 60 + +duration[1] + 0.5;\r\n          card.setAttribute('duration', duration);\r\n    \r\n          card.addEventListener('click',this.messagePlayerListener);\r\n        \r\n          this.mediaListener(card);\r\n        }\r\n        this.messages.append(card);\r\n      } catch (error) {\r\n        console.error('Failed to get coordinates:', error);\r\n        document.body.append(this.popup);\r\n      }\r\n  }  \r\n\r\n// Cb for event handling, arising while recording audio or video\r\n  recordListener() {\r\n    [...document.querySelectorAll('.btn')].forEach((btn) => {\r\n      btn.addEventListener('click', (e) => {\r\n        this.recorder.stop();\r\n        this.stream.getTracks().forEach(track => track.stop());   \r\n  \r\n        this.videoPlayer.style.display = 'none';\r\n        document.querySelector('.player').style.display = 'none';\r\n        document.querySelector('.icons').style.display = 'flex';\r\n\r\n        if (e.target.classList.contains('ok')) {\r\n          this.recorder.stop();\r\n        }\r\n      });\r\n  \r\n    });\r\n  }\r\n\r\n// Method creating timer and setInterval for every second update  \r\n  timer() {\r\n    const startTimer = new Date();\r\n\r\n    const timerInterval = setInterval(() => {\r\n      const currentTimer = new Date();\r\n      const elapsedTimer = new Date(currentTimer - startTimer);\r\n\r\n      const minutes = elapsedTimer.getMinutes();\r\n      const seconds = elapsedTimer.getSeconds();\r\n\r\n      const formattedMinutes = String(minutes).padStart(2, '0');\r\n      const formattedSeconds = String(seconds).padStart(2, '0');\r\n\r\n      const formattedTime = `${formattedMinutes}:${formattedSeconds}`;\r\n\r\n      document.querySelector('.timing').textContent = formattedTime;\r\n    }, 1000);\r\n\r\n    return function stopTimer() {\r\n      clearInterval(timerInterval);\r\n    };\r\n  }\r\n\r\n// Cb for event handling, arising on the input for creating message (text, audio, video)   \r\n  messageListener() {\r\n    this.input.addEventListener('keydown', async (e) => {\r\n      if (e.key === 'Enter' && this.input.value !== '') {\r\n        this.actualContentType = 'text';\r\n        this.createCard(this.input.value, this.actualContentType, this._coords);\r\n      }\r\n    }); \r\n    \r\n    let stopTimer;\r\n\r\n    [...document.querySelectorAll('.icon')].forEach((el) => {\r\n      el.addEventListener('click', async (e) => {\r\n\r\n        this.actualContentType = e.target.className.replace(' icon', '');\r\n\r\n        try {\r\n          this.stream = await navigator.mediaDevices.getUserMedia({\r\n            audio: true,\r\n            video: true,\r\n          });\r\n  \r\n          if (this.stream) {\r\n            \r\n            if (e.target.classList.contains('video')) {\r\n              this.videoPlayer.style.display = 'block';\r\n              this.videoPlayer.muted = true;\r\n              this.videoPlayer.srcObject = this.stream\r\n            }\r\n  \r\n            document.querySelector('.icons').style.display = 'none';\r\n            document.querySelector('.player').style.display = 'flex';\r\n            \r\n            this.recorder = new MediaRecorder(this.stream, { mimeType: 'video/webm; codecs=vp9' });\r\n            this.recorder.start();\r\n  \r\n            this.videoPlayer.addEventListener('canplay', () => {\r\n              this.videoPlayer.play();\r\n            });\r\n  \r\n            stopTimer = this.timer();\r\n  \r\n            const chunks = [];\r\n    \r\n            this.recorder.addEventListener('dataavailable', function(e) {\r\n              chunks.push(e.data);\r\n            });\r\n  \r\n            this.recorder.addEventListener('stop', async () => {\r\n              stopTimer();\r\n              this.blob = new Blob(chunks);\r\n              \r\n              this.createCard(this.blob, this.actualContentType, this._coords);\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.log('Пожалуйста, дайте разрешение для записи видео и аудио'); \r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n// Cb for popup elements event handler\r\n  popupListener() {\r\n    this.popup.querySelector('.popup_buttons').addEventListener('click', (e) => {\r\n      if (e.target.classList.contains('popup_cancelBtn')) {\r\n        this.popup.remove();\r\n      }\r\n    });\r\n\r\n    \r\n    this.popup.querySelector('.popup_form').addEventListener('submit', (e) => {\r\n      e.preventDefault(); \r\n      this.checkInput(e.target.querySelector('.popup_input').value, this.actualContentType);\r\n    });\r\n  }\r\n\r\n// Cb for event handler for Play button inside cards\r\n  messagePlayerListener(event) {\r\n    const card = event.target.closest('.card');\r\n    const media = card.querySelector('.media');\r\n\r\n    if (event.target.className === 'play-button') {\r\n      this.actualContentType = media.className.replace('media ', '').replace(' icon', '').replace('File', '');\r\n      event.target.classList.add(`${this.actualContentType}_pause`);\r\n      media.play();\r\n    } else if (event.target.className === `play-button ${this.actualContentType}_pause`) {\r\n      this.actualContentType = media.className.replace('media ', '').replace(' icon', '').replace('File', '');\r\n      event.target.classList.remove(`${this.actualContentType}_pause`);\r\n      media.pause();\r\n    }\r\n  }\r\n\r\n// Method for listening events on media inside cards\r\n  mediaListener(card) {\r\n    const media = card.querySelector('.media');\r\n    const playBtn = card.querySelector('.play-button');\r\n    const inputRange = card.querySelector('.seek-bar-range'); \r\n    const duration = card.getAttribute('duration') ? card.getAttribute('duration') : 1;\r\n\r\n    media.addEventListener('timeupdate', () => {\r\n      const currentTime = media.currentTime;\r\n      const percent = (currentTime / duration) * 100;\r\n      inputRange.value = percent;\r\n    });\r\n    \r\n    media.addEventListener('ended', () => {\r\n      this.actualContentType = media.className.replace('media ', '').replace(' icon', '').replace('File', '');\r\n      playBtn.classList.remove(`${this.actualContentType}_pause`);\r\n      inputRange.value = 0;\r\n    });\r\n    \r\n    inputRange.addEventListener('input', (e) => {\r\n      const newTime = +e.target.value / 100 * duration;\r\n      media.currentTime = newTime;\r\n    });\r\n  }\r\n\r\n// Checking the correctness of coordinates entered manually by the user\r\n  checkInput(value, type) {\r\n    try {\r\n      if(this.input.checkValidity()) {\r\n        this.popup.remove();\r\n        this._coords = value.replace(/[\\[\\]\\s]/g, '').split(','); \r\n        this.saveCoords();\r\n\r\n        if (type !== 'text') {\r\n          this.createCard(this.blob, type, this._coords);\r\n        } else {\r\n          this.createCard(this.input.value, type, this._coords);\r\n        }          \r\n      } else {\r\n        throw new Error('Введите корректное значение координат.');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.input.setCustomValidity(error.message);\r\n      this.input.reportValidity();\r\n      setTimeout(() => {\r\n        this.input.setCustomValidity('');\r\n        this.input.reportValidity();\r\n      }, 3000);\r\n      // throw new Error(error.message);\r\n    }\r\n  }\r\n}\r\n"],"names":["MediaControls","constructor","media","type","this","_media","_type","_element","controls","document","createElement","classList","add","play","seekBar","input","setAttribute","currentTime","append","element","Card","content","coords","_content","_coords","_currentDate","date","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","card","flex","textContent","video","customControls","src","URL","createObjectURL","audio","latitude","longitude","String","fromCodePoint","Popup","popup","popupTitle","popupMessage","form","label","inputSpan","buttons","okBtn","cancelBtn","initCoords","messages","querySelector","videoPlayer","actualContentType","stream","recorder","blob","messageListener","popupListener","recordListener","localStorage","getItem","JSON","parse","saveCoords","setItem","stringify","getCoords","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","data","toFixed","err","console","log","enableHighAccuracy","Error","createCard","duration","split","replace","addEventListener","messagePlayerListener","mediaListener","error","body","querySelectorAll","forEach","btn","e","stop","getTracks","track","style","display","target","contains","timer","startTimer","timerInterval","setInterval","currentTimer","elapsedTimer","minutes","seconds","getSeconds","formattedTime","padStart","clearInterval","stopTimer","async","key","value","el","className","mediaDevices","getUserMedia","muted","srcObject","MediaRecorder","mimeType","start","chunks","push","Blob","remove","preventDefault","checkInput","event","closest","pause","playBtn","inputRange","getAttribute","percent","newTime","checkValidity","setCustomValidity","message","reportValidity","setTimeout"],"sourceRoot":""}